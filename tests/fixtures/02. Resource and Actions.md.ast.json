{
  "_version": "2.2",
  "ast": {
    "_version": "4.0",
    "metadata": [
      {
        "name": "FORMAT",
        "value": "1A"
      }
    ],
    "name": "Resource and Actions API",
    "description": "This API example demonstrates how to define a resource with multiple actions.\n\n## API Blueprint\n\n+ [Previous: The Simplest API](01.%20Simplest%20API.md)\n\n+ [This: Raw API Blueprint](https://raw.github.com/apiaryio/api-blueprint/master/examples/02.%20Resource%20and%20Actions.md)\n\n+ [Next: Named Resource and Actions](03.%20Named%20Resource%20and%20Actions.md)\n\n",
    "element": "category",
    "resourceGroups": [
      {
        "name": "",
        "description": "",
        "resources": [
          {
            "element": "resource",
            "name": "",
            "description": "This is our [resource](http://www.w3.org/TR/di-gloss/#def-resource). It is\ndefined by its\n[URI](http://www.w3.org/TR/di-gloss/#def-uniform-resource-identifier) or, more\nprecisely, by its [URI Template](http://tools.ietf.org/html/rfc6570).\n\nThis resource has no actions specified but we will fix that soon.\n\n",
            "uriTemplate": "/message",
            "model": {},
            "parameters": [],
            "actions": [
              {
                "name": "",
                "description": "Here we define an action using the `GET` [HTTP request method](http://www.w3schools.com/tags/ref_httpmethods.asp) for our resource `/message`.\n\nAs with every good action it should return a\n[response](http://www.w3.org/TR/di-gloss/#def-http-response). A response always\nbears a status code. Code 200 is great as it means all is green. Responding\nwith some data can be a great idea as well so let's add a plain text message to\nour response.\n\n",
                "method": "GET",
                "parameters": [],
                "attributes": {
                  "relation": "",
                  "uriTemplate": ""
                },
                "content": [],
                "examples": [
                  {
                    "name": "",
                    "description": "",
                    "requests": [],
                    "responses": [
                      {
                        "name": "200",
                        "description": "",
                        "headers": [
                          {
                            "name": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "Hello World!\n",
                        "schema": "",
                        "content": [
                          {
                            "element": "asset",
                            "attributes": {
                              "role": "bodyExample"
                            },
                            "content": "Hello World!\n"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "",
                "description": "OK, let's add another action. This time to put new data to our resource\n(essentially an update action). We will need to send something in a\n[request](http://www.w3.org/TR/di-gloss/#def-http-request) and then send a\nresponse back confirming the posting was a success (_HTTP Status Code 204 ~\nResource updated successfully, no content is returned_).\n\n",
                "method": "PUT",
                "parameters": [],
                "attributes": {
                  "relation": "",
                  "uriTemplate": ""
                },
                "content": [],
                "examples": [
                  {
                    "name": "",
                    "description": "",
                    "requests": [
                      {
                        "name": "",
                        "description": "",
                        "headers": [
                          {
                            "name": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "All your base are belong to us.\n",
                        "schema": "",
                        "content": [
                          {
                            "element": "asset",
                            "attributes": {
                              "role": "bodyExample"
                            },
                            "content": "All your base are belong to us.\n"
                          }
                        ]
                      }
                    ],
                    "responses": [
                      {
                        "name": "204",
                        "description": "",
                        "headers": [],
                        "body": "",
                        "schema": "",
                        "content": []
                      }
                    ]
                  }
                ]
              }
            ],
            "content": []
          }
        ]
      }
    ],
    "content": [
      {
        "element": "category",
        "content": [
          {
            "element": "resource",
            "name": "",
            "description": "This is our [resource](http://www.w3.org/TR/di-gloss/#def-resource). It is\ndefined by its\n[URI](http://www.w3.org/TR/di-gloss/#def-uniform-resource-identifier) or, more\nprecisely, by its [URI Template](http://tools.ietf.org/html/rfc6570).\n\nThis resource has no actions specified but we will fix that soon.\n\n",
            "uriTemplate": "/message",
            "model": {},
            "parameters": [],
            "actions": [
              {
                "name": "",
                "description": "Here we define an action using the `GET` [HTTP request method](http://www.w3schools.com/tags/ref_httpmethods.asp) for our resource `/message`.\n\nAs with every good action it should return a\n[response](http://www.w3.org/TR/di-gloss/#def-http-response). A response always\nbears a status code. Code 200 is great as it means all is green. Responding\nwith some data can be a great idea as well so let's add a plain text message to\nour response.\n\n",
                "method": "GET",
                "parameters": [],
                "attributes": {
                  "relation": "",
                  "uriTemplate": ""
                },
                "content": [],
                "examples": [
                  {
                    "name": "",
                    "description": "",
                    "requests": [],
                    "responses": [
                      {
                        "name": "200",
                        "description": "",
                        "headers": [
                          {
                            "name": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "Hello World!\n",
                        "schema": "",
                        "content": [
                          {
                            "element": "asset",
                            "attributes": {
                              "role": "bodyExample"
                            },
                            "content": "Hello World!\n"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "",
                "description": "OK, let's add another action. This time to put new data to our resource\n(essentially an update action). We will need to send something in a\n[request](http://www.w3.org/TR/di-gloss/#def-http-request) and then send a\nresponse back confirming the posting was a success (_HTTP Status Code 204 ~\nResource updated successfully, no content is returned_).\n\n",
                "method": "PUT",
                "parameters": [],
                "attributes": {
                  "relation": "",
                  "uriTemplate": ""
                },
                "content": [],
                "examples": [
                  {
                    "name": "",
                    "description": "",
                    "requests": [
                      {
                        "name": "",
                        "description": "",
                        "headers": [
                          {
                            "name": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "All your base are belong to us.\n",
                        "schema": "",
                        "content": [
                          {
                            "element": "asset",
                            "attributes": {
                              "role": "bodyExample"
                            },
                            "content": "All your base are belong to us.\n"
                          }
                        ]
                      }
                    ],
                    "responses": [
                      {
                        "name": "204",
                        "description": "",
                        "headers": [],
                        "body": "",
                        "schema": "",
                        "content": []
                      }
                    ]
                  }
                ]
              }
            ],
            "content": []
          }
        ]
      }
    ]
  },
  "error": {
    "code": 0,
    "message": "",
    "location": []
  },
  "warnings": []
}
